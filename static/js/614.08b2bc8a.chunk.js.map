{"version":3,"file":"static/js/614.08b2bc8a.chunk.js","mappings":"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","sources":["components/floatingLabel/FloatingLabel.js","services/userService.js","pages/register/Register.js","utils/commonUtil.js"],"sourcesContent":["import { useId } from 'react';\r\nimport './FloatingLabel.css';\r\n\r\nfunction InputFloatingLabel(props) {\r\n    const { label, id, type, value, onChange, color, disabled } = props;\r\n    const randomId = useId();\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <input\r\n                type={type ?? 'text'}\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                id={id ? `floating-label-${id}` : `floating-label-${randomId}`}\r\n                className={`floating-label peer ${color || ''}`}\r\n                placeholder=\" \"\r\n                disabled={disabled}\r\n            />\r\n\r\n            <label\r\n                htmlFor={\r\n                    id ? `floating-label-${id}` : `floating-label-${randomId}`\r\n                }\r\n                className={`floating-label ${color || ''}`}\r\n            >\r\n                {label}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFloatingLabel;\r\n","import CommonUtil from '../utils/commonUtil';\r\n\r\nclass UserService {\r\n    async register() {\r\n        await CommonUtil.sleep(2000);\r\n        return { code: 200 };\r\n    }\r\n}\r\n\r\nconst userService = new UserService();\r\n\r\nexport default userService;\r\n","import { Button, Card } from 'flowbite-react';\r\nimport { useFormik } from 'formik';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport CommonUtil from '../../utils/commonUtil';\r\nimport InputFloatingLabel from '../../components/floatingLabel/FloatingLabel';\r\nimport './Register.css';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport userService from '../../services/userService';\r\n\r\nconst defaultUserInfo = {\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    email: '',\r\n    ref: '',\r\n};\r\n\r\nconst commonError = {\r\n    required: '{field} is required',\r\n    notEmpty: '{field} is not empty',\r\n    invalid: `{field} is invalid`,\r\n};\r\n\r\nconst schemaError = {\r\n    firstName: {\r\n        required: commonError.required.replace('{field}', 'firstName'),\r\n        notEmpty: commonError.notEmpty.replace('{field}', 'firstName'),\r\n    },\r\n    lastName: {\r\n        required: commonError.required.replace('{field}', 'lastName'),\r\n        notEmpty: commonError.notEmpty.replace('{field}', 'lastName'),\r\n    },\r\n    phone: {\r\n        required: commonError.required.replace('{field}', 'phone'),\r\n    },\r\n    email: {\r\n        required: commonError.required.replace('{field}', 'email'),\r\n        invalid: commonError.invalid.replace('{field}', 'email'),\r\n    },\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().trim().required(schemaError.firstName.required),\r\n    lastName: yup.string().trim().required(schemaError.lastName.required),\r\n    phone: yup\r\n        .string()\r\n        .required(schemaError.phone.required)\r\n        .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\r\n    email: yup\r\n        .string()\r\n        .required(schemaError.email.required)\r\n        .email(schemaError.email.invalid),\r\n});\r\n\r\nfunction Register() {\r\n    const location = useLocation();\r\n    const { setOneTimeRegister } = useAppContext();\r\n    const form = useFormik({\r\n        initialValues: defaultUserInfo,\r\n        validationSchema: schema,\r\n        validateOnMount: false,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n    });\r\n    const { values, errors, setValues, validateForm, setFieldValue } = form;\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    async function validate() {\r\n        setIsSubmitted(true);\r\n        await validateForm().then(async (errors) => {\r\n            if (!errors || CommonUtil.isObjectEmpty(errors)) {\r\n                setIsProcessing(true);\r\n                await userService\r\n                    .register(values)\r\n                    .then((response) => {\r\n                        if (response.code === 200) {\r\n                            setOneTimeRegister(true);\r\n                        }\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => {\r\n                        setIsProcessing(false);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getFieldStyle = useCallback(\r\n        (fieldName) => {\r\n            return isSubmitted && errors && errors[fieldName] ? 'failure' : '';\r\n        },\r\n        [isSubmitted, errors]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const firstName = queryParams.get('firstName') ?? '';\r\n        const lastName = queryParams.get('lastName') ?? '';\r\n        const phone = queryParams.get('phone') ?? '';\r\n        const email = queryParams.get('email') ?? '';\r\n        const ref = queryParams.get('ref') ?? '';\r\n\r\n        setValues({\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            ref,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"h-screen w-full\">\r\n                <div className=\"h-full\">\r\n                    <div className=\"g-6 flex h-full flex-wrap items-center justify-center xl:mb-4\">\r\n                        <div className=\"infographic\">\r\n                            <div className=\"text-wave\">\r\n                                Prepare to <span style={{ ['--i']: 1 }}>R</span>\r\n                                <span style={{ ['--i']: 2 }}>a</span>\r\n                                <span style={{ ['--i']: 3 }}>d</span>\r\n                                <span style={{ ['--i']: 4 }}>a</span>\r\n                                <span style={{ ['--i']: 5 }}>s</span>\r\n                                <span style={{ ['--i']: 6 }}>t</span>\r\n                            </div>\r\n                            <img\r\n                                src=\"https://img.freepik.com/free-vector/businessman-holding-pencil-big-complete-checklist-with-tick-marks_1150-35019.jpg?w=740&t=st=1698810211~exp=1698810811~hmac=bea1e68ff31574f189c99df4ac39b2853e4dae2c7714aac9065d22adff5830d3\"\r\n                                className=\"w-full\"\r\n                                alt=\"register\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"register-form\">\r\n                            <Card>\r\n                                <h2>New User ? Get Registered</h2>\r\n                                <form\r\n                                    onSubmit={(e) => {\r\n                                        e.preventDefault();\r\n                                        validate();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"relative mb-6\">\r\n                                        <InputFloatingLabel\r\n                                            label=\"First name\"\r\n                                            value={form.values.firstName ?? ''}\r\n                                            onChange={(value) => {\r\n                                                setFieldValue(\r\n                                                    'firstName',\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            color={getFieldStyle('firstName')}\r\n                                            disabled={isProcessing}\r\n                                        />\r\n                                        <Error\r\n                                            field=\"firstName\"\r\n                                            isSubmitted={isSubmitted}\r\n                                            errors={errors['firstName']}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"relative mb-6\">\r\n                                        <InputFloatingLabel\r\n                                            label=\"Last name\"\r\n                                            value={form.values.lastName ?? ''}\r\n                                            onChange={(value) => {\r\n                                                setFieldValue(\r\n                                                    'lastName',\r\n                                                    value\r\n                                                );\r\n                                            }}\r\n                                            color={getFieldStyle('lastName')}\r\n                                            disabled={isProcessing}\r\n                                        />\r\n                                        <Error\r\n                                            field=\"firstName\"\r\n                                            isSubmitted={isSubmitted}\r\n                                            errors={errors['lastName']}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"relative mb-6\">\r\n                                        <InputFloatingLabel\r\n                                            label=\"Phone number\"\r\n                                            value={form.values.phone ?? ''}\r\n                                            onChange={(value) => {\r\n                                                setFieldValue('phone', value);\r\n                                            }}\r\n                                            color={getFieldStyle('phone')}\r\n                                            disabled={isProcessing}\r\n                                        />\r\n                                        <Error\r\n                                            field=\"phone\"\r\n                                            isSubmitted={isSubmitted}\r\n                                            errors={errors['phone']}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"relative mb-6\">\r\n                                        <InputFloatingLabel\r\n                                            label=\"Email\"\r\n                                            value={form.values.email ?? ''}\r\n                                            onChange={(value) => {\r\n                                                setFieldValue('email', value);\r\n                                            }}\r\n                                            color={getFieldStyle('email')}\r\n                                            disabled={isProcessing}\r\n                                        />\r\n                                        <Error\r\n                                            field=\"email\"\r\n                                            isSubmitted={isSubmitted}\r\n                                            errors={errors['email']}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"relative mb-6\">\r\n                                        <InputFloatingLabel\r\n                                            label=\"Ref.\"\r\n                                            value={form.values.ref ?? ''}\r\n                                            onChange={(value) => {\r\n                                                setFieldValue('ref', value);\r\n                                            }}\r\n                                            disabled={isProcessing}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center lg:text-left\">\r\n                                        <div className=\"flex justify-center\">\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                pill\r\n                                                isProcessing={isProcessing}\r\n                                            >\r\n                                                Register\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Error(props) {\r\n    const { isSubmitted, errors } = props;\r\n    return isSubmitted && errors ? (\r\n        <small className=\"text-red-600\">{errors}</small>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","const CommonUtil = {\r\n    isFalsyExceptZero: function (value) {\r\n        if (value === 0) {\r\n            return true;\r\n        } else {\r\n            return !!value;\r\n        }\r\n    },\r\n    sleep: async function sleep(ms) {\r\n        await new Promise((resolve) => setTimeout(resolve, ms));\r\n    },\r\n    addHttpsPrefix: function (url) {\r\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n            // TODO: https\r\n            return `http://${url}`;\r\n        }\r\n        return url;\r\n    },\r\n    isObjectEmpty: function (object) {\r\n        return Object.keys(object).length === 0;\r\n    },\r\n};\r\n\r\nexport default CommonUtil;\r\n"],"names":["props","label","id","type","value","onChange","color","disabled","randomId","useId","_jsxs","className","children","_jsx","e","target","concat","placeholder","htmlFor","UserService","_classCallCheck","_createClass","key","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","CommonUtil","sleep","abrupt","code","stop","apply","arguments","defaultUserInfo","firstName","lastName","phone","email","ref","commonError","required","notEmpty","invalid","schemaError","replace","schema","yup","shape","trim","matches","Error","isSubmitted","errors","_Fragment","_form$values$firstNam","_form$values$lastName","_form$values$phone","_form$values$email","_form$values$ref","location","useLocation","setOneTimeRegister","useAppContext","form","useFormik","initialValues","validationSchema","validateOnMount","validateOnBlur","validateOnChange","values","setValues","validateForm","setFieldValue","_useState","useState","_useState2","_slicedToArray","setIsSubmitted","_useState3","_useState4","isProcessing","setIsProcessing","queryParams","URLSearchParams","search","_validate","_callee2","_context2","then","_ref7","isObjectEmpty","userService","register","response","catch","finally","_x","getFieldStyle","useCallback","fieldName","useEffect","_queryParams$get","_queryParams$get2","_queryParams$get3","_queryParams$get4","_queryParams$get5","get","style","_defineProperty","src","alt","Card","onSubmit","preventDefault","validate","InputFloatingLabel","field","Button","pill","isFalsyExceptZero","_sleep","ms","Promise","resolve","setTimeout","addHttpsPrefix","url","startsWith","object","Object","keys","length"],"sourceRoot":""}