{"version":3,"file":"static/js/438.3213cf4c.chunk.js","mappings":"wPAiBA,MAfA,SAAoBA,GAChB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHC,KAAK,SACLC,SAAO,EACPC,MAAI,EACJC,KAAK,KACLC,UAAU,aACVC,QAAS,SAACC,GAAC,OAAKT,EAAMQ,QAAQC,EAAE,EAACC,SAEhCV,EAAMW,MAGnB,E,UC0BA,MAtCA,WACI,IAAAC,GAAsBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzBI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAElB,OACIb,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,UACIT,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACC,gBAAgB,EAAOC,MAAM,aAAYX,UAC/CT,EAAAA,EAAAA,KAACkB,EAAAA,GAASG,KAAI,CAAAZ,UACVa,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,OAAMG,SAAA,EACjBT,EAAAA,EAAAA,KAACuB,EAAAA,GAAS,CACNrB,KAAK,SACLsB,YAAY,OACZC,MAAOV,EACPW,QAAS,SAAClB,GACNmB,QAAQC,IAAIpB,EAAEqB,IAClB,EACAC,SAAU,SAACtB,GACPmB,QAAQC,IAAIpB,EAAEuB,OAAON,OACrBT,EAAOR,EAAEuB,OAAON,MACpB,EACAlB,QAAS,SAACC,GACNA,EAAEwB,iBACN,KAEJhC,EAAAA,EAAAA,KAAA,QAAAS,SAAM,OACNT,EAAAA,EAAAA,KAACuB,EAAAA,GAAS,CACNrB,KAAK,SACLsB,YAAY,KACZjB,QAAS,SAACC,GACNA,EAAEwB,iBACN,YAO5B,ECvBMC,EAAiB,CACnBC,UAAU,EACVC,cAAe,QAuMnB,SAASC,EAAoBrC,GACzB,IAAQsC,EACJtC,EADIsC,QAASF,EACbpC,EADaoC,cAAeD,EAC5BnC,EAD4BmC,SAAU5B,EACtCP,EADsCO,UAAWgC,EACjDvC,EADiDuC,eAGrD,OACIhB,EAAAA,EAAAA,MAACiB,EAAAA,GAAMC,SAAQ,CACXlC,UAAS,wBAAAmC,OAA0BnC,GAAa,IAChDC,QAAS,kBAAM+B,GAAgB,EAAC7B,SAAA,CAE/B4B,GACDrC,EAAAA,EAAAA,KAAA,QAAMM,UAAS,qBAAAmC,OAAuBP,EAAW,SAAW,IAAKzB,SAC1C,QAAlB0B,GAA0BnC,EAAAA,EAAAA,KAAC0C,EAAAA,IAAS,KAAM1C,EAAAA,EAAAA,KAAC2C,EAAAA,IAAW,QAIvE,CAEA,MArNA,WACI,IAAMC,GAAWC,EAAAA,EAAAA,MACjBlC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CmC,EAAWjC,EAAA,GAAEkC,EAAclC,EAAA,GAClCmC,GAA8BpC,EAAAA,EAAAA,UAAS,CACnCqC,YAAa,CACTZ,QAAS,eACTH,UAAU,EACVC,cAAe,OAEnBe,UAAW,CACPb,QAAS,aACTH,UAAU,EACVC,cAAe,SAErBgB,GAAArC,EAAAA,EAAAA,GAAAkC,EAAA,GAXKI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAY1BG,GAA0C1C,EAAAA,EAAAA,YAAU2C,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAA7CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAwC9C,EAAAA,EAAAA,WAAS,GAAK+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpC,SAASrB,EAAewB,GACpB,IAAMC,GAAWC,EAAAA,EAAAA,GAAA,GAAQZ,GACzBa,OAAOC,KAAKH,GAAaI,SAAQ,SAACC,GAC1BA,IAAcN,EACVC,EAAYD,GAAO5B,SACnB6B,EAAYD,GAAO3B,cACsB,QAArC4B,EAAYD,GAAO3B,cACb,OACA,MAEV4B,EAAYD,GAAO5B,UAAW,EAGlC6B,EAAYK,IAAUJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfD,EAAYK,IACZnC,EAGf,IACAoB,EAAWU,EACf,CAEqB,SAAAM,IAMpB,OANoBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAArB,SAAAC,EAAsBjB,GAAa,OAAAe,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAtBhB,GAAgB,GAAMc,EAAAE,KAAA,EAChBC,EAAAA,EACDC,OAAOvB,GACPwB,MAAK,SAACC,GAAI,OAAKlC,EAAekC,EAAK,IACnCC,SAAQ,kBAAMrB,GAAgB,EAAM,IAAE,KAAD,mBAAAc,EAAAQ,OAAA,GAAAV,EAAA,KAC7CJ,EAAAe,MAAA,KAAAC,UAAA,CAED,SAASC,EAAiBC,GACtB3C,EAAS,mBAADH,OAAoB8C,GAChC,CA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WAGc,SAAAC,IAKnB,OALmBA,GAAAnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAApB,SAAAkB,IAAA,OAAAnB,EAAAA,EAAAA,KAAAG,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACUC,EAAAA,EACDc,UACAZ,MAAK,SAACC,GAAI,OAAKlC,EAAekC,EAAK,IACnCC,SAAQ,kBAAMrB,GAAgB,EAAM,IAAE,KAAD,mBAAA8B,EAAAR,OAAA,GAAAO,EAAA,MAC7CN,MAAA,KAAAC,UAAA,CAPDxB,GAAgB,GAAM,WAEF4B,EAAAL,MAAC,KAADC,UAAA,CAOpBQ,EACJ,GAAG,KAEHL,EAAAA,EAAAA,YAAU,WACN,IAAMpB,EAAYH,OAAOC,KAAKd,GAAS0C,MACnC,SAACjE,GAAG,OAAKuB,EAAQvB,GAAKK,QAAQ,IAGd,SAAA6D,IAKnB,OALmBA,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAApB,SAAAwB,IAAA,OAAAzB,EAAAA,EAAAA,KAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACUC,EAAAA,EACDoB,KAAK9B,EAAWhB,EAAQgB,GAAWjC,eACnC6C,MAAK,SAACC,GAAI,OAAKlC,EAAekC,EAAK,IACnCC,SAAQ,kBAAMrB,GAAgB,EAAM,IAAE,KAAD,mBAAAoC,EAAAd,OAAA,GAAAa,EAAA,MAC7CZ,MAAA,KAAAC,UAAA,CANDxB,GAAgB,GAAM,WACFkC,EAAAX,MAAC,KAADC,UAAA,CAMpBQ,EACJ,GAAG,CAACzC,KAGApD,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,UACIa,EAAAA,EAAAA,MAAC6E,EAAAA,GAAI,CAAA1F,SAAA,EACDa,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,gBAAeG,SAAA,EAC1BT,EAAAA,EAAAA,KAACuB,EAAAA,GAAS,CACNjB,UAAU,uBACVI,KAAM0F,EAAAA,IACN5E,YAAY,qCACZM,SAAU,SAACtB,GACPiD,EAAiBjD,EAAEuB,OAAON,MAC9B,EACAC,QAAS,SAAClB,GACQ,UAAVA,EAAEqB,KArD7B,SAEoBwE,GAAAhC,EAAAe,MAAC,KAADC,UAAA,CAoDON,CAAOvB,EAEf,KAEJxD,EAAAA,EAAAA,KAACsG,EAAU,QAEfhF,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,UAASG,SAAA,CACnBqC,GAAeA,EAAYyD,OAAS,GACjCjF,EAAAA,EAAAA,MAACiB,EAAAA,GAAK,CAACiE,WAAS,EAAA/F,SAAA,EACZa,EAAAA,EAAAA,MAACiB,EAAAA,GAAMkE,KAAI,CAAAhG,SAAA,EACPT,EAAAA,EAAAA,KAACoC,GAAmB4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZZ,EAAQH,aAAW,IACvBX,eAAgB,kBACZA,EAAe,cAAc,MAGrCtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAMC,SAAQ,CAAClC,UAAU,cAAaG,SAAC,YAGxCT,EAAAA,EAAAA,KAACoC,GAAmB4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZZ,EAAQF,WAAS,IACrBZ,eAAgB,kBACZA,EAAe,YAAY,EAE/BhC,UAAU,kBAEdN,EAAAA,EAAAA,KAACuC,EAAAA,GAAMC,SAAQ,CAAA/B,SAAC,gBAEpBT,EAAAA,EAAAA,KAACuC,EAAAA,GAAMmE,KAAI,CAACpG,UAAU,WAAUG,SAC3BqC,EAAYyD,OAAS,GAClBzD,EAAY6D,KAAI,SAACC,EAASC,GAAK,OAC3BvF,EAAAA,EAAAA,MAACiB,EAAAA,GAAMuE,IAAG,CACNxG,UAAU,WAEVC,QAAS,kBACL+E,EAAiBsB,EAAQG,GAAG,EAC/BtG,SAAA,EAEDT,EAAAA,EAAAA,KAACuC,EAAAA,GAAMyE,KAAI,CAAAvG,UACPa,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,OAAMG,SAAA,EACjBT,EAAAA,EAAAA,KAAA,OACIiH,IAAI,eACJ3G,UAAU,eACV4G,IAAI,kBAER5F,EAAAA,EAAAA,MAAA,OAAAb,SAAA,EACIT,EAAAA,EAAAA,KAAA,MAAAS,SACKmG,EAAQO,aAEbnH,EAAAA,EAAAA,KAAA,SAAAS,SACKmG,EAAQQ,KAAS,cAKlCpH,EAAAA,EAAAA,KAACuC,EAAAA,GAAMyE,KAAI,CAAC1G,UAAU,cAAaG,SAC9BmG,EAAQS,SAEbrH,EAAAA,EAAAA,KAACuC,EAAAA,GAAMyE,KAAI,CAAC1G,UAAU,aAAYG,SAC7BmG,EAAQU,kBACL,QAERtH,EAAAA,EAAAA,KAACuC,EAAAA,GAAMyE,KAAI,CAAAvG,UACPa,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,aAAYG,SAAA,EACvBT,EAAAA,EAAAA,KAACuH,EAAU,CACP7G,MAAMV,EAAAA,EAAAA,KAACwH,EAAAA,IAAK,IACZjH,QAAS,kBACL+E,EACIsB,EAAQG,GACX,KAGT/G,EAAAA,EAAAA,KAACuH,EAAU,CACP7G,MACIV,EAAAA,EAAAA,KAACyH,EAAAA,IAAc,IAEnBlH,QAAS,SAACC,GACNA,EAAEwB,kBACF0F,OAAOC,KACHf,EAAQgB,IAEhB,WAGC,gBAAAnF,OAnDQoE,GAoDb,UAK5B7G,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,UACMmD,IACE5D,EAAAA,EAAAA,KAAA,OAAKM,UAAU,UAASG,SAAC,uBAKpCmD,IAAgB5D,EAAAA,EAAAA,KAAC6H,EAAAA,EAAO,WAK7C,C","sources":["components/buttonIcon/ButtonIcon.js","components/rangeInput/RangeInput.js","components/company/list/CompanyList.js"],"sourcesContent":["import { Button } from 'flowbite-react';\r\n\r\nfunction ButtonIcon(props) {\r\n    return (\r\n        <Button\r\n            type=\"button\"\r\n            outline\r\n            pill\r\n            size=\"xs\"\r\n            className=\"round-full\"\r\n            onClick={(e) => props.onClick(e)}\r\n        >\r\n            {props.icon}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ButtonIcon;\r\n","import { Dropdown, TextInput } from 'flowbite-react';\r\nimport { useState } from 'react';\r\n\r\nfunction RangeInput() {\r\n    const [min, setMin] = useState();\r\n\r\n    return (\r\n        <>\r\n            <Dropdown dismissOnClick={false} label=\"Market Cap\">\r\n                <Dropdown.Item>\r\n                    <div className=\"flex\">\r\n                        <TextInput\r\n                            type=\"number\"\r\n                            placeholder=\"From\"\r\n                            value={min}\r\n                            onKeyUp={(e) => {\r\n                                console.log(e.key);\r\n                            }}\r\n                            onChange={(e) => {\r\n                                console.log(e.target.value);\r\n                                setMin(e.target.value);\r\n                            }}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                            }}\r\n                        />\r\n                        <span>-</span>\r\n                        <TextInput\r\n                            type=\"number\"\r\n                            placeholder=\"To\"\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Dropdown.Item>\r\n            </Dropdown>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RangeInput;\r\n","import { useEffect, useState } from 'react';\r\nimport companyService from '../../../services/companyService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, Table, TextInput } from 'flowbite-react';\r\nimport {\r\n    FiArrowDown,\r\n    FiArrowUp,\r\n    FiExternalLink,\r\n    FiEye,\r\n    FiSearch,\r\n} from 'react-icons/fi';\r\n\r\nimport './CompanyList.css';\r\nimport ButtonIcon from '../../buttonIcon/ButtonIcon';\r\nimport Loading from '../../loading/Loading';\r\nimport RangeInput from '../../rangeInput/RangeInput';\r\nconst defaultSorting = {\r\n    isActive: false,\r\n    sortDirection: 'desc',\r\n};\r\n\r\nfunction CompanyList() {\r\n    const navigate = useNavigate();\r\n    const [companyList, setCompanyList] = useState([]);\r\n    const [sorting, setSorting] = useState({\r\n        companyName: {\r\n            display: 'Company Name',\r\n            isActive: true,\r\n            sortDirection: 'asc',\r\n        },\r\n        marketCap: {\r\n            display: 'Market Cap',\r\n            isActive: false,\r\n            sortDirection: 'asc',\r\n        },\r\n    });\r\n    const [searchKeyword, setSearchKeyword] = useState();\r\n    const [isProcessing, setIsProcessing] = useState(true);\r\n\r\n    function onClickSorting(field) {\r\n        const tempSorting = { ...sorting };\r\n        Object.keys(tempSorting).forEach((sortField) => {\r\n            if (sortField === field) {\r\n                if (tempSorting[field].isActive) {\r\n                    tempSorting[field].sortDirection =\r\n                        tempSorting[field].sortDirection === 'asc'\r\n                            ? 'desc'\r\n                            : 'asc';\r\n                } else {\r\n                    tempSorting[field].isActive = true;\r\n                }\r\n            } else {\r\n                tempSorting[sortField] = {\r\n                    ...tempSorting[sortField],\r\n                    ...defaultSorting,\r\n                };\r\n            }\r\n        });\r\n        setSorting(tempSorting);\r\n    }\r\n\r\n    async function search(searchKeyword) {\r\n        setIsProcessing(true);\r\n        await companyService\r\n            .search(searchKeyword)\r\n            .then((data) => setCompanyList(data))\r\n            .finally(() => setIsProcessing(false));\r\n    }\r\n\r\n    function navigateToDetail(companyId) {\r\n        navigate(`/company/detail/${companyId}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsProcessing(true);\r\n\r\n        async function fetch() {\r\n            await companyService\r\n                .getList()\r\n                .then((data) => setCompanyList(data))\r\n                .finally(() => setIsProcessing(false));\r\n        }\r\n\r\n        fetch();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const sortField = Object.keys(sorting).find(\r\n            (key) => sorting[key].isActive\r\n        );\r\n        setIsProcessing(true);\r\n        async function fetch() {\r\n            await companyService\r\n                .sort(sortField, sorting[sortField].sortDirection)\r\n                .then((data) => setCompanyList(data))\r\n                .finally(() => setIsProcessing(false));\r\n        }\r\n        fetch();\r\n    }, [sorting]);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"flex flex-row\">\r\n                    <TextInput\r\n                        className=\"company-input-search\"\r\n                        icon={FiSearch}\r\n                        placeholder=\"Search by name or relavant keyword\"\r\n                        onChange={(e) => {\r\n                            setSearchKeyword(e.target.value);\r\n                        }}\r\n                        onKeyUp={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                search(searchKeyword);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <RangeInput />\r\n                </div>\r\n                <div className=\"content\">\r\n                    {companyList && companyList.length > 0 ? (\r\n                        <Table hoverable>\r\n                            <Table.Head>\r\n                                <TableHeaderSortable\r\n                                    {...sorting.companyName}\r\n                                    onClickSorting={() =>\r\n                                        onClickSorting('companyName')\r\n                                    }\r\n                                />\r\n                                <Table.HeadCell className=\"text-center\">\r\n                                    F Type\r\n                                </Table.HeadCell>\r\n                                <TableHeaderSortable\r\n                                    {...sorting.marketCap}\r\n                                    onClickSorting={() =>\r\n                                        onClickSorting('marketCap')\r\n                                    }\r\n                                    className=\"justify-end\"\r\n                                />\r\n                                <Table.HeadCell>Actions</Table.HeadCell>\r\n                            </Table.Head>\r\n                            <Table.Body className=\"divide-y\">\r\n                                {companyList.length > 0 &&\r\n                                    companyList.map((company, index) => (\r\n                                        <Table.Row\r\n                                            className=\"bg-white\"\r\n                                            key={`company-list-${index}`}\r\n                                            onClick={() =>\r\n                                                navigateToDetail(company.id)\r\n                                            }\r\n                                        >\r\n                                            <Table.Cell>\r\n                                                <div className=\"flex\">\r\n                                                    <img\r\n                                                        src=\"/favicon.ico\"\r\n                                                        className=\"company-logo\"\r\n                                                        alt=\"company logo\"\r\n                                                    />\r\n                                                    <div>\r\n                                                        <h3>\r\n                                                            {company.aliasName}\r\n                                                        </h3>\r\n                                                        <small>\r\n                                                            {company.name['en']}\r\n                                                        </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell className=\"text-center\">\r\n                                                {company.fType}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell className=\"text-right\">\r\n                                                {company.marketCapDisplay ||\r\n                                                    'NA'}\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <div className=\"flex gap-1\">\r\n                                                    <ButtonIcon\r\n                                                        icon={<FiEye />}\r\n                                                        onClick={() =>\r\n                                                            navigateToDetail(\r\n                                                                company.id\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                    <ButtonIcon\r\n                                                        icon={\r\n                                                            <FiExternalLink />\r\n                                                        }\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            window.open(\r\n                                                                company.url\r\n                                                            );\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    ))}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    ) : (\r\n                        <>\r\n                            {!isProcessing && (\r\n                                <div className=\"no-data\">There is no data</div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n                    {isProcessing && <Loading />}\r\n                </div>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TableHeaderSortable(props) {\r\n    const { display, sortDirection, isActive, className, onClickSorting } =\r\n        props;\r\n\r\n    return (\r\n        <Table.HeadCell\r\n            className={`flex hover:underline ${className || ''}`}\r\n            onClick={() => onClickSorting()}\r\n        >\r\n            {display}\r\n            <span className={`table-header-icon ${isActive ? 'active' : ''}`}>\r\n                {sortDirection === 'asc' ? <FiArrowUp /> : <FiArrowDown />}\r\n            </span>\r\n        </Table.HeadCell>\r\n    );\r\n}\r\n\r\nexport default CompanyList;\r\n"],"names":["props","_jsx","Button","type","outline","pill","size","className","onClick","e","children","icon","_useState","useState","_useState2","_slicedToArray","min","setMin","_Fragment","Dropdown","dismissOnClick","label","Item","_jsxs","TextInput","placeholder","value","onKeyUp","console","log","key","onChange","target","stopPropagation","defaultSorting","isActive","sortDirection","TableHeaderSortable","display","onClickSorting","Table","HeadCell","concat","FiArrowUp","FiArrowDown","navigate","useNavigate","companyList","setCompanyList","_useState3","companyName","marketCap","_useState4","sorting","setSorting","_useState5","_useState6","searchKeyword","setSearchKeyword","_useState7","_useState8","isProcessing","setIsProcessing","field","tempSorting","_objectSpread","Object","keys","forEach","sortField","_search","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","wrap","_context3","prev","next","companyService","search","then","data","finally","stop","apply","arguments","navigateToDetail","companyId","useEffect","_fetch","_callee","_context","getList","fetch","find","_fetch2","_callee2","_context2","sort","Card","FiSearch","_x","RangeInput","length","hoverable","Head","Body","map","company","index","Row","id","Cell","src","alt","aliasName","name","fType","marketCapDisplay","ButtonIcon","FiEye","FiExternalLink","window","open","url","Loading"],"sourceRoot":""}