{"version":3,"file":"static/js/614.ec450cd2.chunk.js","mappings":"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","sources":["components/floatingLabel/FloatingLabel.js","services/userService.js","pages/register/Register.js","utils/commonUtil.js"],"sourcesContent":["import { useId } from 'react';\r\nimport './FloatingLabel.css';\r\n\r\nfunction InputFloatingLabel(props) {\r\n    const { label, id, type, value, onChange, color, disabled } = props;\r\n    const randomId = useId();\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <input\r\n                type={type ?? 'text'}\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                id={id ? `floating-label-${id}` : `floating-label-${randomId}`}\r\n                className={`floating-label peer ${color || ''}`}\r\n                placeholder=\" \"\r\n                disabled={disabled}\r\n            />\r\n\r\n            <label\r\n                htmlFor={\r\n                    id ? `floating-label-${id}` : `floating-label-${randomId}`\r\n                }\r\n                className={`floating-label ${color || ''}`}\r\n            >\r\n                {label}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFloatingLabel;\r\n","import CommonUtil from '../utils/commonUtil';\r\n\r\nclass UserService {\r\n    async register() {\r\n        await CommonUtil.sleep(2000);\r\n        return { code: 200 };\r\n    }\r\n}\r\n\r\nconst userService = new UserService();\r\n\r\nexport default userService;\r\n","import { Button, Card } from 'flowbite-react';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport CommonUtil from '../../utils/commonUtil';\r\nimport InputFloatingLabel from '../../components/floatingLabel/FloatingLabel';\r\nimport './Register.css';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport userService from '../../services/userService';\r\n\r\nconst defaultUserInfo = {\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    email: '',\r\n    ref: '',\r\n};\r\n\r\nconst fieldDisplay = {\r\n    firstName: 'First name',\r\n    lastName: 'Last name',\r\n    phone: 'Phone number',\r\n    email: 'Email',\r\n    ref: 'Referral',\r\n};\r\n\r\nconst commonError = {\r\n    required: '{field} is required',\r\n    notEmpty: '{field} is not empty',\r\n    invalid: `{field} is invalid`,\r\n};\r\n\r\nconst schemaError = {\r\n    firstName: {\r\n        required: commonError.required.replace(\r\n            '{field}',\r\n            fieldDisplay.firstName\r\n        ),\r\n        notEmpty: commonError.notEmpty.replace(\r\n            '{field}',\r\n            fieldDisplay.firstName\r\n        ),\r\n    },\r\n    lastName: {\r\n        required: commonError.required.replace(\r\n            '{field}',\r\n            fieldDisplay.lastName\r\n        ),\r\n        notEmpty: commonError.notEmpty.replace(\r\n            '{field}',\r\n            fieldDisplay.lastName\r\n        ),\r\n    },\r\n    phone: {\r\n        required: commonError.required.replace('{field}', fieldDisplay.phone),\r\n    },\r\n    email: {\r\n        required: commonError.required.replace('{field}', fieldDisplay.email),\r\n        invalid: commonError.invalid.replace('{field}', fieldDisplay.email),\r\n    },\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().trim().required(schemaError.firstName.required),\r\n    lastName: yup.string().trim().required(schemaError.lastName.required),\r\n    phone: yup\r\n        .string()\r\n        .required(schemaError.phone.required)\r\n        .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\r\n    email: yup\r\n        .string()\r\n        .required(schemaError.email.required)\r\n        .email(schemaError.email.invalid),\r\n});\r\n\r\nconst illustrationImgUrl =\r\n    'https://img.freepik.com/free-vector/businessman-holding-pencil-big-complete-checklist-with-tick-marks_1150-35019.jpg?w=740&t=st=1698810211~exp=1698810811~hmac=bea1e68ff31574f189c99df4ac39b2853e4dae2c7714aac9065d22adff5830d3';\r\n\r\nfunction Register() {\r\n    const location = useLocation();\r\n    const { isMobile, setOneTimeRegister } = useAppContext();\r\n    const form = useFormik({\r\n        initialValues: defaultUserInfo,\r\n        validationSchema: schema,\r\n        validateOnMount: false,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n    });\r\n    const {\r\n        values,\r\n        errors: actualErrors,\r\n        setValues,\r\n        validateForm,\r\n        setFieldValue,\r\n    } = form;\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    async function validate() {\r\n        setIsSubmitted(true);\r\n        await validateForm().then(async (errors) => {\r\n            setErrors(errors);\r\n            if (!errors || CommonUtil.isObjectEmpty(errors)) {\r\n                setIsProcessing(true);\r\n                await userService\r\n                    .register(values)\r\n                    .then((response) => {\r\n                        if (response.code === 200) {\r\n                            setOneTimeRegister(true);\r\n                        }\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => {\r\n                        setIsProcessing(false);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getFieldStyle = useCallback(\r\n        (fieldName) => {\r\n            return isSubmitted && errors && errors[fieldName] ? 'failure' : '';\r\n        },\r\n        [isSubmitted, errors]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const firstName = queryParams.get('firstName') ?? '';\r\n        const lastName = queryParams.get('lastName') ?? '';\r\n        const phone = queryParams.get('phone') ?? '';\r\n        const email = queryParams.get('email') ?? '';\r\n        const ref = queryParams.get('ref') ?? '';\r\n\r\n        setValues({\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            ref,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"register-page\">\r\n                <h1 className=\"text-white\">Prepare to Radast 🚀</h1>\r\n                <Card\r\n                    imgSrc={isMobile ? undefined : illustrationImgUrl}\r\n                    horizontal={!isMobile}\r\n                    theme={{\r\n                        root: {\r\n                            base: 'flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800',\r\n                            horizontal: {\r\n                                on: 'flex-col md:flex-row',\r\n                            },\r\n                            children:\r\n                                'flex w-full h-full flex-col justify-center p-6',\r\n                        },\r\n                        img: {\r\n                            horizontal: {\r\n                                on: 'object-contain',\r\n                            },\r\n                        },\r\n                    }}\r\n                >\r\n                    {isMobile && (\r\n                        <img\r\n                            src={illustrationImgUrl}\r\n                            className=\"w-full\"\r\n                            alt=\"register\"\r\n                        />\r\n                    )}\r\n                    <h2 className=\"text-center\">\r\n                        New users? Let's get you started!\r\n                    </h2>\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            validate();\r\n                        }}\r\n                    >\r\n                        <Field isError={!!errors['firstName']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.firstName}\r\n                                value={form.values.firstName ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('firstName', value);\r\n                                }}\r\n                                color={getFieldStyle('firstName')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"firstName\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['firstName']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['lastName']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.lastName}\r\n                                value={form.values.lastName ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('lastName', value);\r\n                                }}\r\n                                color={getFieldStyle('lastName')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"firstName\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['lastName']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['phone']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.phone}\r\n                                value={form.values.phone ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('phone', value);\r\n                                }}\r\n                                color={getFieldStyle('phone')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"phone\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['phone']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['email']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.email}\r\n                                value={form.values.email ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('email', value);\r\n                                }}\r\n                                color={getFieldStyle('email')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"email\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['email']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.ref}\r\n                                value={form.values.ref ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('ref', value);\r\n                                }}\r\n                                disabled={isProcessing}\r\n                            />\r\n                        </Field>\r\n\r\n                        <div className=\"text-center lg:text-left\">\r\n                            <div className=\"flex justify-center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    pill\r\n                                    isProcessing={isProcessing}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Error(props) {\r\n    const { isSubmitted, errors } = props;\r\n    return isSubmitted && errors ? (\r\n        <small className=\"text-red-600\">{errors}</small>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nfunction Field(props) {\r\n    const { children, isError } = props;\r\n    return (\r\n        <div className={`relative ${isError ? 'mb-1' : 'mb-7'}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","const CommonUtil = {\r\n    isNotFalsyExceptZero: function (value) {\r\n        if (value === 0) {\r\n            return true;\r\n        } else {\r\n            return !value;\r\n        }\r\n    },\r\n    isFalsyIncludeZero: function (value) {\r\n        if (value === 0) {\r\n            return true;\r\n        } else {\r\n            return !value;\r\n        }\r\n    },\r\n    sleep: async function sleep(ms) {\r\n        await new Promise((resolve) => setTimeout(resolve, ms));\r\n    },\r\n    addHttpsPrefix: function (url) {\r\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n            // TODO: https\r\n            return `http://${url}`;\r\n        }\r\n        return url;\r\n    },\r\n    isObjectEmpty: function (object) {\r\n        return Object.keys(object).length === 0;\r\n    },\r\n};\r\n\r\nexport default CommonUtil;\r\n"],"names":["props","label","id","type","value","onChange","color","disabled","randomId","useId","_jsxs","className","children","_jsx","e","target","concat","placeholder","htmlFor","UserService","_classCallCheck","_createClass","key","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","CommonUtil","sleep","abrupt","code","stop","apply","arguments","defaultUserInfo","firstName","lastName","phone","email","ref","fieldDisplay","commonError","required","notEmpty","invalid","schemaError","replace","schema","yup","shape","trim","matches","illustrationImgUrl","Error","isSubmitted","errors","_Fragment","Field","isError","_form$values$firstNam","_form$values$lastName","_form$values$phone","_form$values$email","_form$values$ref","location","useLocation","_useAppContext","useAppContext","isMobile","setOneTimeRegister","form","useFormik","initialValues","validationSchema","validateOnMount","validateOnBlur","validateOnChange","values","setValues","validateForm","setFieldValue","_useState","useState","_useState2","_slicedToArray","setIsSubmitted","_useState3","_useState4","isProcessing","setIsProcessing","_useState5","_useState6","setErrors","queryParams","URLSearchParams","search","_validate","_callee2","_context2","then","_ref","isObjectEmpty","userService","register","response","catch","finally","_x","getFieldStyle","useCallback","fieldName","useEffect","_queryParams$get","_queryParams$get2","_queryParams$get3","_queryParams$get4","_queryParams$get5","get","Card","imgSrc","undefined","horizontal","theme","root","base","on","img","src","alt","onSubmit","preventDefault","validate","InputFloatingLabel","field","Button","pill","isNotFalsyExceptZero","isFalsyIncludeZero","_sleep","ms","Promise","resolve","setTimeout","addHttpsPrefix","url","startsWith","object","Object","keys","length"],"sourceRoot":""}