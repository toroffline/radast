{"version":3,"file":"static/js/614.20788598.chunk.js","mappings":"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","sources":["components/floatingLabel/FloatingLabel.js","services/userService.js","pages/register/Register.js","utils/commonUtil.js"],"sourcesContent":["import { useId, useState } from 'react';\r\nimport './FloatingLabel.css';\r\n\r\nfunction InputFloatingLabel(props) {\r\n    const {\r\n        label,\r\n        id,\r\n        type,\r\n        value,\r\n        placeholder: _placeholder,\r\n        onChange,\r\n        color,\r\n        disabled,\r\n    } = props;\r\n    const [placeholder, setPlaceholder] = useState(' ');\r\n    const randomId = useId();\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <input\r\n                type={type ?? 'text'}\r\n                value={value}\r\n                id={id ? `floating-label-${id}` : `floating-label-${randomId}`}\r\n                className={`floating-label peer ${color || ''}`}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                onFocus={() => setPlaceholder(_placeholder)}\r\n                onBlur={() => setPlaceholder(' ')}\r\n            />\r\n\r\n            <label\r\n                htmlFor={\r\n                    id ? `floating-label-${id}` : `floating-label-${randomId}`\r\n                }\r\n                className={`floating-label ${color || ''}`}\r\n            >\r\n                {label}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFloatingLabel;\r\n","import CommonUtil from '../utils/commonUtil';\r\n\r\nclass UserService {\r\n    async register() {\r\n        await CommonUtil.sleep(2000);\r\n        return { code: 200 };\r\n    }\r\n}\r\n\r\nconst userService = new UserService();\r\n\r\nexport default userService;\r\n","import { Button, Card } from 'flowbite-react';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport CommonUtil from '../../utils/commonUtil';\r\nimport InputFloatingLabel from '../../components/floatingLabel/FloatingLabel';\r\nimport './Register.css';\r\nimport { useAppContext } from '../../context/appContext';\r\nimport userService from '../../services/userService';\r\n\r\nconst defaultUserInfo = {\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    email: '',\r\n    ref: '',\r\n};\r\n\r\nconst fieldDisplay = {\r\n    firstName: 'First name',\r\n    lastName: 'Last name',\r\n    phone: 'Phone number',\r\n    email: 'Email',\r\n    ref: 'Referral',\r\n};\r\n\r\nconst commonError = {\r\n    required: '{field} is required',\r\n    notEmpty: '{field} is not empty',\r\n    invalid: `{field} is invalid`,\r\n};\r\n\r\nconst schemaError = {\r\n    firstName: {\r\n        required: commonError.required.replace(\r\n            '{field}',\r\n            fieldDisplay.firstName\r\n        ),\r\n        notEmpty: commonError.notEmpty.replace(\r\n            '{field}',\r\n            fieldDisplay.firstName\r\n        ),\r\n    },\r\n    lastName: {\r\n        required: commonError.required.replace(\r\n            '{field}',\r\n            fieldDisplay.lastName\r\n        ),\r\n        notEmpty: commonError.notEmpty.replace(\r\n            '{field}',\r\n            fieldDisplay.lastName\r\n        ),\r\n    },\r\n    phone: {\r\n        required: commonError.required.replace('{field}', fieldDisplay.phone),\r\n    },\r\n    email: {\r\n        required: commonError.required.replace('{field}', fieldDisplay.email),\r\n        invalid: commonError.invalid.replace('{field}', fieldDisplay.email),\r\n    },\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().trim().required(schemaError.firstName.required),\r\n    lastName: yup.string().trim().required(schemaError.lastName.required),\r\n    phone: yup\r\n        .string()\r\n        .required(schemaError.phone.required)\r\n        .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\r\n    email: yup\r\n        .string()\r\n        .required(schemaError.email.required)\r\n        .email(schemaError.email.invalid),\r\n});\r\n\r\nconst illustrationImgUrl =\r\n    'https://img.freepik.com/free-vector/businessman-holding-pencil-big-complete-checklist-with-tick-marks_1150-35019.jpg?w=740&t=st=1698810211~exp=1698810811~hmac=bea1e68ff31574f189c99df4ac39b2853e4dae2c7714aac9065d22adff5830d3';\r\n\r\nfunction Register() {\r\n    const location = useLocation();\r\n    const { isMobile, setOneTimeRegister } = useAppContext();\r\n    const form = useFormik({\r\n        initialValues: defaultUserInfo,\r\n        validationSchema: schema,\r\n        validateOnMount: false,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n    });\r\n    const {\r\n        values,\r\n        errors: actualErrors,\r\n        setValues,\r\n        validateForm,\r\n        setFieldValue,\r\n    } = form;\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    async function validate() {\r\n        setIsSubmitted(true);\r\n        await validateForm().then(async (errors) => {\r\n            setErrors(actualErrors);\r\n            if (!errors || CommonUtil.isObjectEmpty(errors)) {\r\n                setIsProcessing(true);\r\n                await userService\r\n                    .register(values)\r\n                    .then((response) => {\r\n                        if (response.code === 200) {\r\n                            setOneTimeRegister(true);\r\n                        }\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => {\r\n                        setIsProcessing(false);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getFieldStyle = useCallback(\r\n        (fieldName) => {\r\n            return isSubmitted && errors && errors[fieldName] ? 'failure' : '';\r\n        },\r\n        [isSubmitted, errors]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isSubmitted) {\r\n            setErrors(actualErrors);\r\n        }\r\n    }, [isSubmitted, actualErrors]);\r\n\r\n    useEffect(() => {\r\n        const firstName = queryParams.get('firstName') ?? '';\r\n        const lastName = queryParams.get('lastName') ?? '';\r\n        const phone = queryParams.get('phone') ?? '';\r\n        const email = queryParams.get('email') ?? '';\r\n        const ref = queryParams.get('ref') ?? '';\r\n\r\n        setValues({\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            ref,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"register-page\">\r\n                <Card\r\n                    imgSrc={isMobile ? undefined : illustrationImgUrl}\r\n                    horizontal={!isMobile}\r\n                    theme={{\r\n                        root: {\r\n                            base: 'flex rounded-lg border border-gray-200 bg-white shadow-md',\r\n                            horizontal: {\r\n                                on: 'flex-col md:flex-row',\r\n                            },\r\n                            children:\r\n                                'flex register-form h-full flex-col justify-center p-6',\r\n                        },\r\n                        img: {\r\n                            horizontal: {\r\n                                on: 'rounded-t-lg object-none md:w-72 md:rounded-none md:rounded-l-lg',\r\n                            },\r\n                        },\r\n                    }}\r\n                >\r\n                    {isMobile && (\r\n                        <img\r\n                            src={illustrationImgUrl}\r\n                            className=\"w-full\"\r\n                            alt=\"register\"\r\n                        />\r\n                    )}\r\n                    <h1 className=\"text-2xl\">Prepare to Radast 📡</h1>\r\n                    <h2 className=\"text-left font-bold\">\r\n                        New user? Let's get you started!\r\n                    </h2>\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            validate();\r\n                        }}\r\n                    >\r\n                        <Field isError={!!errors['firstName']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.firstName}\r\n                                placeholder=\"Enter your first name\"\r\n                                value={form.values.firstName ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('firstName', value);\r\n                                }}\r\n                                color={getFieldStyle('firstName')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"firstName\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['firstName']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['lastName']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.lastName}\r\n                                placeholder=\"Enter your last name\"\r\n                                value={form.values.lastName ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('lastName', value);\r\n                                }}\r\n                                color={getFieldStyle('lastName')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"firstName\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['lastName']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['phone']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.phone}\r\n                                placeholder=\"0901234567\"\r\n                                value={form.values.phone ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('phone', value);\r\n                                }}\r\n                                color={getFieldStyle('phone')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"phone\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['phone']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field isError={!!errors['email']}>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.email}\r\n                                placeholder=\"email@test.com\"\r\n                                value={form.values.email ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('email', value);\r\n                                }}\r\n                                color={getFieldStyle('email')}\r\n                                disabled={isProcessing}\r\n                            />\r\n                            <Error\r\n                                field=\"email\"\r\n                                isSubmitted={isSubmitted}\r\n                                errors={errors['email']}\r\n                            />\r\n                        </Field>\r\n\r\n                        <Field>\r\n                            <InputFloatingLabel\r\n                                label={fieldDisplay.ref}\r\n                                placeholder=\"010A9999\"\r\n                                value={form.values.ref ?? ''}\r\n                                onChange={(value) => {\r\n                                    setFieldValue('ref', value);\r\n                                }}\r\n                                disabled={isProcessing}\r\n                            />\r\n                        </Field>\r\n\r\n                        <div className=\"text-center lg:text-left\">\r\n                            <div className=\"flex justify-center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    pill\r\n                                    isProcessing={isProcessing}\r\n                                    className=\"w-full\"\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Error(props) {\r\n    const { isSubmitted, errors } = props;\r\n    return isSubmitted && errors ? (\r\n        <small className=\"text-red-600\">{errors}</small>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nfunction Field(props) {\r\n    const { children, isError } = props;\r\n    return (\r\n        <div className={`relative ${isError ? 'mb-1' : 'mb-7'}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","const CommonUtil = {\r\n    defaultCompanyLogoSrc: 'building.png',\r\n    isNotFalsyExceptZero: function (value) {\r\n        if (value === 0) {\r\n            return true;\r\n        } else {\r\n            return !value;\r\n        }\r\n    },\r\n    isFalsyIncludeZero: function (value) {\r\n        if (value === 0) {\r\n            return true;\r\n        } else {\r\n            return !value;\r\n        }\r\n    },\r\n    sleep: async function sleep(ms) {\r\n        await new Promise((resolve) => setTimeout(resolve, ms));\r\n    },\r\n    addHttpsPrefix: function (url) {\r\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n            // TODO: https\r\n            return `http://${url}`;\r\n        }\r\n        return url;\r\n    },\r\n    isObjectEmpty: function (object) {\r\n        return Object.keys(object).length === 0;\r\n    },\r\n};\r\n\r\nexport default CommonUtil;\r\n"],"names":["props","label","id","type","value","_placeholder","placeholder","onChange","color","disabled","_useState","useState","_useState2","_slicedToArray","setPlaceholder","randomId","useId","_jsxs","className","children","_jsx","concat","e","target","onFocus","onBlur","htmlFor","UserService","_classCallCheck","_createClass","key","_register","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","CommonUtil","sleep","abrupt","code","stop","apply","arguments","defaultUserInfo","firstName","lastName","phone","email","ref","fieldDisplay","commonError","required","notEmpty","invalid","schemaError","replace","schema","yup","shape","trim","matches","illustrationImgUrl","Error","isSubmitted","errors","_Fragment","Field","isError","_form$values$firstNam","_form$values$lastName","_form$values$phone","_form$values$email","_form$values$ref","location","useLocation","_useAppContext","useAppContext","isMobile","setOneTimeRegister","form","useFormik","initialValues","validationSchema","validateOnMount","validateOnBlur","validateOnChange","values","actualErrors","setValues","validateForm","setFieldValue","setIsSubmitted","_useState3","_useState4","isProcessing","setIsProcessing","_useState5","_useState6","setErrors","queryParams","URLSearchParams","search","_validate","_callee2","_context2","then","_ref","isObjectEmpty","userService","register","response","catch","finally","_x","getFieldStyle","useCallback","fieldName","useEffect","_queryParams$get","_queryParams$get2","_queryParams$get3","_queryParams$get4","_queryParams$get5","get","Card","imgSrc","undefined","horizontal","theme","root","base","on","img","src","alt","onSubmit","preventDefault","validate","InputFloatingLabel","field","Button","pill","defaultCompanyLogoSrc","isNotFalsyExceptZero","isFalsyIncludeZero","_sleep","ms","Promise","resolve","setTimeout","addHttpsPrefix","url","startsWith","object","Object","keys","length"],"sourceRoot":""}